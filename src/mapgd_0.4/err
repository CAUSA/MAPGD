datatypes/row.cc: In member function ‘void row::add_data(const data*)’:
datatypes/row.cc:34:26: error: ‘const class data’ has no member named ‘get_key’
  key new_key=*this_data->get_key();
                          ^
datatypes/row.cc: In member function ‘std::string row::get_name(const key&)’:
datatypes/row.cc:53:18: error: ‘const class key’ has no member named ‘type’
  return this_key.type->name();
                  ^
datatypes/row.cc: In member function ‘key row::get_key(const string&) const’:
datatypes/row.cc:63:32: error: passing ‘const std::map<std::basic_string<char>, key*>’ as ‘this’ argument of ‘std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::basic_string<char>; _Tp = key*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, key*> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = key*; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::basic_string<char>]’ discards qualifiers [-fpermissive]
  return *keys_by_name_[key_name]; 
                                ^
datatypes/row.cc: At global scope:
datatypes/row.cc:71:6: error: prototype for ‘void row::get(const string&, void*)’ does not match any in class ‘row’
 void row::get(const std::string &key_name, void *dest)
      ^
In file included from datatypes/row.cc:1:0:
datatypes/row.h:45:7: error: candidates are: void row::get(const uint8_t&, void*) const
  void get(const uint8_t &key_num, void *dst) const;
       ^
datatypes/row.h:44:7: error:                 void row::get(const char*, void*) const
  void get(const char *key_name, void *dst) const;
       ^
datatypes/row.h:43:7: error:                 void row::get(const string&, void*) const
  void get(const std::string &key_name, void *dst) const;
       ^
datatypes/row.cc:83:6: error: prototype for ‘void row::get(const string&, void*)’ does not match any in class ‘row’
 void row::get(const std::string &key_name, void *dest)
      ^
datatypes/row.cc:77:6: error: candidates are: void row::get(const uint8_t&, void*) const
 void row::get(const uint8_t &key_num, void *dest) const
      ^
In file included from datatypes/row.cc:1:0:
datatypes/row.h:44:7: error:                 void row::get(const char*, void*) const
  void get(const char *key_name, void *dst) const;
       ^
datatypes/row.h:43:7: error:                 void row::get(const string&, void*) const
  void get(const std::string &key_name, void *dst) const;
       ^
datatypes/row.cc:89:6: error: redefinition of ‘void row::get(const uint8_t&, void*) const’
 void row::get(const uint8_t &key_num, void *dest) const
      ^
datatypes/row.cc:77:6: error: ‘void row::get(const uint8_t&, void*) const’ previously defined here
 void row::get(const uint8_t &key_num, void *dest) const
      ^
datatypes/row.cc: In member function ‘std::string row::get_name(const key&)’:
datatypes/row.cc:54:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1plus: some warnings being treated as errors
make: *** [datatypes/row.o] Error 1
