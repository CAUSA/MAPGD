//This file has been automatically generated by src_scripts/make_key_defs.py

#ifndef _KEY_DEFS_H_
#define _KEY_DEFS_H_

#include "pipe.h"
#include "../typedef.h"

class key_type
{
public:
	static constexpr key_t
	char7=0,
	uint8=1,
	char13=2,
	string=3,
	size=4,
	real=5,
	genotyp=6,
	count=7,
	flag=8,
	id0=9,
	id1=10,
	quartet=11,
	allele=12,
	locus=13,
	synom=14;
};

class key_id
{
public:
	static constexpr key_t
	keyname=0,
	keynum=1,
	type=2,
	desc=3,
	synonym=4,
	size=5,
	real=6,
	genotyp=7,
	count=8,
	flag=9,
	chr=10,
	chrnum=11,
	pos=12,
	quartet=13,
	allele=14,
	locus=15,
	genprob=16,
	freq=17,
	error=18,
	loglike=19,
	smpname=20,
	rowid=21,
	cov=22,
	smpsize=23,
	somatic=24,
	valid=25,
	strbias=26,
	sb=26,
	mapq0=27,
	mq0=27,
	h2=28,
	hapmap2=28,
	end=29,
	ref=30,
	aa=31,
	anctype=31,
	ncut=32,
	gof=33,
	def=34,
	polyll=35,
	hwell=36,
	maxll=37,
	efchrom=38;
};

static key keyname_k={key_id::keyname, key_type::char7, "keyname", "a unique label for data stored in columns"};
static key keynum_k={key_id::keynum, key_type::uint8, "keynum", "a number that is synonymous for a KEYNAME"};
static key type_k={key_id::type, key_type::char13, "type", "the type of data stored in KEY columns"};
static key desc_k={key_id::desc, key_type::string, "desc", "a verbal description of data stored by the key"};
static key synonym_k={key_id::synonym, key_type::char13, "synonym", "a key which is synonomous for another key"};
static key size_k={key_id::size, key_type::size, "size", "an integer number representing a size in bytes"};
static key real_k={key_id::real, key_type::real, "real", "a floating-point number"};
static key genotyp_k={key_id::genotyp, key_type::genotyp, "genotyp", "a genotype"};
static key count_k={key_id::count, key_type::count, "count", "a small integer"};
static key flag_k={key_id::flag, key_type::flag, "flag", "a true or false value"};
static key chr_k={key_id::chr, key_type::char13, "chr", "a short string representing a scaffold or chromosome"};
static key chrnum_k={key_id::chrnum, key_type::id0, "chrnum", "a number refering to how may scaffolds occur before this scaffold"};
static key pos_k={key_id::pos, key_type::id1, "pos", "the position on a scaffold or chromosome"};
static key quartet_k={key_id::quartet, key_type::quartet, "quartet", "five values representing the number of times a A,C,G,T, or N were observed"};
static key allele_k={key_id::allele, key_type::allele, "allele", "an array of all mutaully exclusive genotypes and their frequencies"};
static key locus_k={key_id::locus, key_type::locus, "locus", "an array of quartets at some locus"};
static key genprob_k={key_id::genprob, key_type::real, "genprob", "genotypic probability"};
static key freq_k={key_id::freq, key_type::real, "freq", "allele frequency"};
static key error_k={key_id::error, key_type::real, "error", "error rate"};
static key loglike_k={key_id::loglike, key_type::real, "loglike", "log likelihood"};
static key smpname_k={key_id::smpname, key_type::size, "smpname", "sample name"};
static key rowid_k={key_id::rowid, key_type::size, "rowid", "a number representing how many rows occur before this row in the file"};
static key cov_k={key_id::cov, key_type::count, "cov", "read depth"};
static key smpsize_k={key_id::smpsize, key_type::size, "smpsize", "the number of samples/individuals within the data"};
static key somatic_k={key_id::somatic, key_type::flag, "somatic", "a flag to indicate that the record is a somatic mutaiton"};
static key valid_k={key_id::valid, key_type::flag, "valid", "a flag to indicate that a record has been validated?"};
static key strbias_k={key_id::strbias, key_type::real, "strbias", "strand bais at this position"};
static key sb_k={key_id::sb, key_type::real, "sb", "strand bais at this position"};
static key mapq0_k={key_id::mapq0, key_type::count, "mapq0", "number of MAPQ==0 reads covering this position"};
static key mq0_k={key_id::mq0, key_type::synom, "mq0", "a synonym for MAPQ0"};
static key hapmap2_k={key_id::hapmap2, key_type::flag, "hapmap2", "membership in hapmap2"};
static key h2_k={key_id::h2, key_type::synom, "h2", "membership in hapmap2"};
static key end_k={key_id::end, key_type::size, "end", "ending row of a variant described by this record"};
static key ref_k={key_id::ref, key_type::genotyp, "ref", "reference allele"};
static key anctype_k={key_id::anctype, key_type::genotyp, "anctype", "ancestoral allele"};
static key aa_k={key_id::aa, key_type::synom, "aa", "ancestoral allele"};
static key ncut_k={key_id::ncut, key_type::size, "ncut", "the number of samples excluded because of filters"};
static key gof_k={key_id::gof, key_type::real, "gof", "goodness of fit value"};
static key def_k={key_id::def, key_type::flag, "def", "a flag to indicate that a record represents a default value"};
static key polyll_k={key_id::polyll, key_type::real, "polyll", "the log of the ratio polymorphic fit / monomorphic fit (chi-sqr, 2 df)"};
static key hwell_k={key_id::hwell, key_type::real, "hwell", "the log of the ratio polymorphic fit / monomorphic fit (chi-sqr, 2 df)"};
static key maxll_k={key_id::maxll, key_type::real, "maxll", "the maximum likelihood fit of the data"};
static key efchrom_k={key_id::efchrom, key_type::real, "efchrom", "the effective number of chromosomes at a locus"};

#endif
