/*This code was automatically generated by MakeNewtonTheta.py*/

#include "allele_stat.h"
#include "quartet.h"
#include "typedef.h"

inline float_t H0 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) + 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t H1 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) + 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t H2 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) + a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J00 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-1.33333333333333*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-2*a.f + 2.0) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-2*a.f + 2.0))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5) + (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) + 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))*(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) - 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) - pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2)
;
}

inline float_t J01 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) + 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))*(M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) - 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error - 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0))/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.error*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0))/(-a.error + 1.0) + 0.666666666666667*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0))/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0))/a.error)/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J02 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) - a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) - a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))*(-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) + 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(e1 + e2) - 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-2*a.freq + 1.0) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-2*a.freq + 1.0))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J10 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) - 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) - pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))*(-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) + 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0))/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.error*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0))/(-a.error + 1.0) + 0.666666666666667*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0))/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0))/a.error)/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J11 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (pow(M, 2)*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/pow(-a.error + 1.0, 2) - M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/pow(-a.error + 1.0, 2) - 6.0*M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/(a.error*(-a.error + 1.0)) + 0.666666666666667*a.error*a.freq*pow(-0.333333333333333*M - 0.333333333333333*m, 2)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/pow(-0.333333333333333*a.error + 0.5, 2) + 0.222222222222222*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/pow(-0.333333333333333*a.error + 0.5, 2) + 1.33333333333333*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + pow(m, 2)*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/pow(-a.error + 1.0, 2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/pow(-a.error + 1.0, 2) - 6.0*m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/(a.error*(-a.error + 1.0)) + 9.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*pow(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2, 2)/pow(a.error, 2) - 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/pow(a.error, 2) + 9.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*pow(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m, 2)/pow(a.error, 2) - 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/pow(a.error, 2))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5) + (-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) + 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)*(M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) - 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error - 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2)
;
}

inline float_t J12 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) - a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) - a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))*(-M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) + 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) + 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) + 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (-M*a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0)/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - a.freq*m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0)/(-a.error + 1.0) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + 3.0*a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0)*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0)*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J20 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) + a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))*(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(e1 + e2) - 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) - pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.f*a.freq + a.f*(-a.freq + 1.0) - 2.0*pow(-a.freq + 1.0, 1.0)) - pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.f*a.freq + a.f*(-a.freq + 1.0) + 2.0*pow(a.freq, 1.0)))/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(e1 + e2) - 0.666666666666667*a.error*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) - a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m) - a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J21 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) + a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))*(M*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))/(-a.error + 1.0) - 3.0*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0))*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error - 3.0*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0))*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2) + (-M*a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0)/(-a.error + 1.0) - 0.666666666666667*a.error*a.freq*(-0.333333333333333*M - 0.333333333333333*m)*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2)/(-0.333333333333333*a.error + 0.5) - a.freq*m*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0)/(-a.error + 1.0) - 0.666666666666667*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + 3.0*a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0)*(0.333333333333333*M + 0.333333333333333*e1 + 0.333333333333333*e2)/a.error + 3.0*a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0)*(0.333333333333333*e1 + 0.333333333333333*e2 + 0.333333333333333*m)/a.error)/(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

inline float_t J22 (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return (-0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) + a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) + a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))*(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.freq + 1.0)*(e1 + e2) - a.freq*pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(-a.freq + 1.0) - a.freq*pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(-a.freq + 1.0))/pow(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5, 2)
;
}

inline float_t lnL (const quartet_t &q, const allele_stat &a) {
	const float_t M=q.base[a.major];
	const float_t m=q.base[a.minor];
	const float_t e1=q.base[a.e1];
	const float_t e2=q.base[a.e2];
	return log(0.666666666666667*a.error*a.freq*pow(-0.333333333333333*a.error + 0.5, M + m)*(-a.f + 1.0)*(-a.freq + 1.0)*(e1 + e2) + pow(0.333333333333333*a.error, M + e1 + e2)*pow(-a.error + 1.0, m)*(a.f*a.freq*(-a.freq + 1.0) + pow(-a.freq + 1.0, 2.0)) + pow(0.333333333333333*a.error, e1 + e2 + m)*pow(-a.error + 1.0, M)*(a.f*a.freq*(-a.freq + 1.0) + pow(a.freq, 2.0)) - 2.0e-5)
;
}

